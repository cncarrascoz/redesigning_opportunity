{"ast":null,"code":"var _jsxFileName = \"/Users/mahiarahman/Documents/Harvard/classes/cs1060/hw6/redesigning_opportunity/client/src/components/OpportunityMap.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Box } from '@mui/material';\n\n// Replace with your Mapbox access token\n// For a real application, you would store this in an environment variable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFoaWFyIiwiYSI6ImNtNDY1YnlwdDB2Z2IybHEwd2w3MHJvb3cifQ.wJqnzFFTwLFwYhiPG3SWJA';\nconst OpportunityMap = ({\n  neighborhoods\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n\n  // Debug: Log neighborhoods data\n  useEffect(() => {\n    console.log('OpportunityMap received neighborhoods data:', neighborhoods);\n  }, [neighborhoods]);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    if (!neighborhoods) return;\n    console.log('Initializing map with neighborhoods data');\n\n    // Check if map is already initialized\n    if (mapRef.current) return;\n    try {\n      const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/light-v11',\n        center: [-73.97, 40.75],\n        // NYC coordinates (example)\n        zoom: 12,\n        attributionControl: true\n      });\n      console.log('Map initialized successfully');\n      mapRef.current = map;\n\n      // Add error handling\n      map.on('error', e => {\n        console.error('Mapbox error:', e);\n      });\n\n      // Add navigation control (zoom buttons)\n      map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n      map.on('load', () => {\n        console.log('Map loaded, adding neighborhood data');\n\n        // Add the neighborhoods data as a source\n        map.addSource('neighborhoods', {\n          type: 'geojson',\n          data: neighborhoods\n        });\n\n        // Add a layer for the neighborhood polygons\n        map.addLayer({\n          id: 'neighborhood-fills',\n          type: 'fill',\n          source: 'neighborhoods',\n          layout: {},\n          paint: {\n            'fill-color': ['case', ['has', 'filtered'],\n            // Check if the 'filtered' property exists\n            ['case', ['==', ['get', 'filtered'], true],\n            // If filtered is true\n            ['interpolate', ['linear'], ['get', 'opportunityScore'], 0, '#f7fbff', 2, '#d0e1f2', 4, '#94c4df', 6, '#4a98c9', 8, '#1764ab', 10, '#08306b'], '#cccccc' // If filtered is false, use gray\n            ],\n            // If 'filtered' property doesn't exist, use the regular color scale\n            ['interpolate', ['linear'], ['get', 'opportunityScore'], 0, '#f7fbff', 2, '#d0e1f2', 4, '#94c4df', 6, '#4a98c9', 8, '#1764ab', 10, '#08306b']],\n            'fill-opacity': 0.75\n          }\n        });\n\n        // Add a layer for the neighborhood borders\n        map.addLayer({\n          id: 'neighborhood-borders',\n          type: 'line',\n          source: 'neighborhoods',\n          layout: {},\n          paint: {\n            'line-color': '#000',\n            'line-width': 1\n          }\n        });\n\n        // Add a popup on hover\n        const popup = new mapboxgl.Popup({\n          closeButton: false,\n          closeOnClick: false\n        });\n        map.on('mouseenter', 'neighborhood-fills', e => {\n          map.getCanvas().style.cursor = 'pointer';\n          const properties = e.features[0].properties;\n          const filtered = properties.filtered !== undefined ? properties.filtered : true;\n          if (filtered) {\n            const coordinates = e.lngLat;\n            const html = `\n              <strong>${properties.name}</strong><br/>\n              Opportunity Score: ${properties.opportunityScore}<br/>\n              School Quality: ${properties.schoolQuality}<br/>\n              ${properties.description}\n            `;\n            popup.setLngLat(coordinates).setHTML(html).addTo(map);\n          }\n        });\n        map.on('mouseleave', 'neighborhood-fills', () => {\n          map.getCanvas().style.cursor = '';\n          popup.remove();\n        });\n      });\n\n      // Clean up on unmount\n      return () => map.remove();\n    } catch (error) {\n      console.error('Error initializing map:', error);\n    }\n  }, [neighborhoods]);\n\n  // Update the map when neighborhoods data changes\n  useEffect(() => {\n    if (!mapRef.current || !neighborhoods) return;\n    const map = mapRef.current;\n    if (map.isStyleLoaded() && map.getSource('neighborhoods')) {\n      console.log('Updating neighborhoods data source');\n      map.getSource('neighborhoods').setData(neighborhoods);\n    }\n  }, [neighborhoods]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: mapContainerRef,\n    sx: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 10\n  }, this);\n};\n_s(OpportunityMap, \"QAEdrTKB3jFeWON1SV8mAvhy3fw=\");\n_c = OpportunityMap;\nexport default OpportunityMap;\nvar _c;\n$RefreshReg$(_c, \"OpportunityMap\");","map":{"version":3,"names":["React","useRef","useEffect","mapboxgl","Box","jsxDEV","_jsxDEV","accessToken","OpportunityMap","neighborhoods","_s","mapContainerRef","mapRef","console","log","current","map","Map","container","style","center","zoom","attributionControl","on","e","error","addControl","NavigationControl","addSource","type","data","addLayer","id","source","layout","paint","popup","Popup","closeButton","closeOnClick","getCanvas","cursor","properties","features","filtered","undefined","coordinates","lngLat","html","name","opportunityScore","schoolQuality","description","setLngLat","setHTML","addTo","remove","isStyleLoaded","getSource","setData","ref","sx","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mahiarahman/Documents/Harvard/classes/cs1060/hw6/redesigning_opportunity/client/src/components/OpportunityMap.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Box } from '@mui/material';\n\n// Replace with your Mapbox access token\n// For a real application, you would store this in an environment variable\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFoaWFyIiwiYSI6ImNtNDY1YnlwdDB2Z2IybHEwd2w3MHJvb3cifQ.wJqnzFFTwLFwYhiPG3SWJA';\n\nconst OpportunityMap = ({ neighborhoods }) => {\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  \n  // Debug: Log neighborhoods data\n  useEffect(() => {\n    console.log('OpportunityMap received neighborhoods data:', neighborhoods);\n  }, [neighborhoods]);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    if (!neighborhoods) return;\n\n    console.log('Initializing map with neighborhoods data');\n    \n    // Check if map is already initialized\n    if (mapRef.current) return;\n    \n    try {\n      const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/light-v11',\n        center: [-73.97, 40.75], // NYC coordinates (example)\n        zoom: 12,\n        attributionControl: true\n      });\n      \n      console.log('Map initialized successfully');\n      mapRef.current = map;\n      \n      // Add error handling\n      map.on('error', (e) => {\n        console.error('Mapbox error:', e);\n      });\n      \n      // Add navigation control (zoom buttons)\n      map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n      \n      map.on('load', () => {\n        console.log('Map loaded, adding neighborhood data');\n        \n        // Add the neighborhoods data as a source\n        map.addSource('neighborhoods', {\n          type: 'geojson',\n          data: neighborhoods\n        });\n        \n        // Add a layer for the neighborhood polygons\n        map.addLayer({\n          id: 'neighborhood-fills',\n          type: 'fill',\n          source: 'neighborhoods',\n          layout: {},\n          paint: {\n            'fill-color': [\n              'case',\n              ['has', 'filtered'], // Check if the 'filtered' property exists\n              [\n                'case',\n                ['==', ['get', 'filtered'], true], // If filtered is true\n                [\n                  'interpolate',\n                  ['linear'],\n                  ['get', 'opportunityScore'],\n                  0, '#f7fbff',\n                  2, '#d0e1f2',\n                  4, '#94c4df',\n                  6, '#4a98c9',\n                  8, '#1764ab',\n                  10, '#08306b'\n                ],\n                '#cccccc' // If filtered is false, use gray\n              ],\n              // If 'filtered' property doesn't exist, use the regular color scale\n              [\n                'interpolate',\n                ['linear'],\n                ['get', 'opportunityScore'],\n                0, '#f7fbff',\n                2, '#d0e1f2',\n                4, '#94c4df',\n                6, '#4a98c9',\n                8, '#1764ab',\n                10, '#08306b'\n              ]\n            ],\n            'fill-opacity': 0.75\n          }\n        });\n        \n        // Add a layer for the neighborhood borders\n        map.addLayer({\n          id: 'neighborhood-borders',\n          type: 'line',\n          source: 'neighborhoods',\n          layout: {},\n          paint: {\n            'line-color': '#000',\n            'line-width': 1\n          }\n        });\n        \n        // Add a popup on hover\n        const popup = new mapboxgl.Popup({\n          closeButton: false,\n          closeOnClick: false\n        });\n        \n        map.on('mouseenter', 'neighborhood-fills', (e) => {\n          map.getCanvas().style.cursor = 'pointer';\n          \n          const properties = e.features[0].properties;\n          const filtered = properties.filtered !== undefined ? properties.filtered : true;\n          \n          if (filtered) {\n            const coordinates = e.lngLat;\n            \n            const html = `\n              <strong>${properties.name}</strong><br/>\n              Opportunity Score: ${properties.opportunityScore}<br/>\n              School Quality: ${properties.schoolQuality}<br/>\n              ${properties.description}\n            `;\n            \n            popup.setLngLat(coordinates).setHTML(html).addTo(map);\n          }\n        });\n        \n        map.on('mouseleave', 'neighborhood-fills', () => {\n          map.getCanvas().style.cursor = '';\n          popup.remove();\n        });\n      });\n      \n      // Clean up on unmount\n      return () => map.remove();\n    } catch (error) {\n      console.error('Error initializing map:', error);\n    }\n  }, [neighborhoods]);\n  \n  // Update the map when neighborhoods data changes\n  useEffect(() => {\n    if (!mapRef.current || !neighborhoods) return;\n    \n    const map = mapRef.current;\n    \n    if (map.isStyleLoaded() && map.getSource('neighborhoods')) {\n      console.log('Updating neighborhoods data source');\n      map.getSource('neighborhoods').setData(neighborhoods);\n    }\n  }, [neighborhoods]);\n  \n  return <Box ref={mapContainerRef} sx={{ width: '100%', height: '100%' }} />;\n};\n\nexport default OpportunityMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,8BAA8B;AACrC,SAASC,GAAG,QAAQ,eAAe;;AAEnC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAH,QAAQ,CAACI,WAAW,GAAG,0FAA0F;AAEjH,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,eAAe,GAAGV,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMW,MAAM,GAAGX,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACAC,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEL,aAAa,CAAC;EAC3E,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;;EAEnB;EACAP,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,aAAa,EAAE;IAEpBI,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;;IAEvD;IACA,IAAIF,MAAM,CAACG,OAAO,EAAE;IAEpB,IAAI;MACF,MAAMC,GAAG,GAAG,IAAIb,QAAQ,CAACc,GAAG,CAAC;QAC3BC,SAAS,EAAEP,eAAe,CAACI,OAAO;QAClCI,KAAK,EAAE,kCAAkC;QACzCC,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC;QAAE;QACzBC,IAAI,EAAE,EAAE;QACRC,kBAAkB,EAAE;MACtB,CAAC,CAAC;MAEFT,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CF,MAAM,CAACG,OAAO,GAAGC,GAAG;;MAEpB;MACAA,GAAG,CAACO,EAAE,CAAC,OAAO,EAAGC,CAAC,IAAK;QACrBX,OAAO,CAACY,KAAK,CAAC,eAAe,EAAED,CAAC,CAAC;MACnC,CAAC,CAAC;;MAEF;MACAR,GAAG,CAACU,UAAU,CAAC,IAAIvB,QAAQ,CAACwB,iBAAiB,CAAC,CAAC,EAAE,WAAW,CAAC;MAE7DX,GAAG,CAACO,EAAE,CAAC,MAAM,EAAE,MAAM;QACnBV,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;;QAEnD;QACAE,GAAG,CAACY,SAAS,CAAC,eAAe,EAAE;UAC7BC,IAAI,EAAE,SAAS;UACfC,IAAI,EAAErB;QACR,CAAC,CAAC;;QAEF;QACAO,GAAG,CAACe,QAAQ,CAAC;UACXC,EAAE,EAAE,oBAAoB;UACxBH,IAAI,EAAE,MAAM;UACZI,MAAM,EAAE,eAAe;UACvBC,MAAM,EAAE,CAAC,CAAC;UACVC,KAAK,EAAE;YACL,YAAY,EAAE,CACZ,MAAM,EACN,CAAC,KAAK,EAAE,UAAU,CAAC;YAAE;YACrB,CACE,MAAM,EACN,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC;YAAE;YACnC,CACE,aAAa,EACb,CAAC,QAAQ,CAAC,EACV,CAAC,KAAK,EAAE,kBAAkB,CAAC,EAC3B,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,SAAS,EACZ,EAAE,EAAE,SAAS,CACd,EACD,SAAS,CAAC;YAAA,CACX;YACD;YACA,CACE,aAAa,EACb,CAAC,QAAQ,CAAC,EACV,CAAC,KAAK,EAAE,kBAAkB,CAAC,EAC3B,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,SAAS,EACZ,CAAC,EAAE,SAAS,EACZ,EAAE,EAAE,SAAS,CACd,CACF;YACD,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;;QAEF;QACAnB,GAAG,CAACe,QAAQ,CAAC;UACXC,EAAE,EAAE,sBAAsB;UAC1BH,IAAI,EAAE,MAAM;UACZI,MAAM,EAAE,eAAe;UACvBC,MAAM,EAAE,CAAC,CAAC;UACVC,KAAK,EAAE;YACL,YAAY,EAAE,MAAM;YACpB,YAAY,EAAE;UAChB;QACF,CAAC,CAAC;;QAEF;QACA,MAAMC,KAAK,GAAG,IAAIjC,QAAQ,CAACkC,KAAK,CAAC;UAC/BC,WAAW,EAAE,KAAK;UAClBC,YAAY,EAAE;QAChB,CAAC,CAAC;QAEFvB,GAAG,CAACO,EAAE,CAAC,YAAY,EAAE,oBAAoB,EAAGC,CAAC,IAAK;UAChDR,GAAG,CAACwB,SAAS,CAAC,CAAC,CAACrB,KAAK,CAACsB,MAAM,GAAG,SAAS;UAExC,MAAMC,UAAU,GAAGlB,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAAC,CAACD,UAAU;UAC3C,MAAME,QAAQ,GAAGF,UAAU,CAACE,QAAQ,KAAKC,SAAS,GAAGH,UAAU,CAACE,QAAQ,GAAG,IAAI;UAE/E,IAAIA,QAAQ,EAAE;YACZ,MAAME,WAAW,GAAGtB,CAAC,CAACuB,MAAM;YAE5B,MAAMC,IAAI,GAAG;AACzB,wBAAwBN,UAAU,CAACO,IAAI;AACvC,mCAAmCP,UAAU,CAACQ,gBAAgB;AAC9D,gCAAgCR,UAAU,CAACS,aAAa;AACxD,gBAAgBT,UAAU,CAACU,WAAW;AACtC,aAAa;YAEDhB,KAAK,CAACiB,SAAS,CAACP,WAAW,CAAC,CAACQ,OAAO,CAACN,IAAI,CAAC,CAACO,KAAK,CAACvC,GAAG,CAAC;UACvD;QACF,CAAC,CAAC;QAEFA,GAAG,CAACO,EAAE,CAAC,YAAY,EAAE,oBAAoB,EAAE,MAAM;UAC/CP,GAAG,CAACwB,SAAS,CAAC,CAAC,CAACrB,KAAK,CAACsB,MAAM,GAAG,EAAE;UACjCL,KAAK,CAACoB,MAAM,CAAC,CAAC;QAChB,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACA,OAAO,MAAMxC,GAAG,CAACwC,MAAM,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC,EAAE,CAAChB,aAAa,CAAC,CAAC;;EAEnB;EACAP,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,MAAM,CAACG,OAAO,IAAI,CAACN,aAAa,EAAE;IAEvC,MAAMO,GAAG,GAAGJ,MAAM,CAACG,OAAO;IAE1B,IAAIC,GAAG,CAACyC,aAAa,CAAC,CAAC,IAAIzC,GAAG,CAAC0C,SAAS,CAAC,eAAe,CAAC,EAAE;MACzD7C,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDE,GAAG,CAAC0C,SAAS,CAAC,eAAe,CAAC,CAACC,OAAO,CAAClD,aAAa,CAAC;IACvD;EACF,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,oBAAOH,OAAA,CAACF,GAAG;IAACwD,GAAG,EAAEjD,eAAgB;IAACkD,EAAE,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7E,CAAC;AAACzD,EAAA,CA1JIF,cAAc;AAAA4D,EAAA,GAAd5D,cAAc;AA4JpB,eAAeA,cAAc;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}