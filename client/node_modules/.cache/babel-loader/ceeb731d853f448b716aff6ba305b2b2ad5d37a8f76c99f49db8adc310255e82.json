{"ast":null,"code":"var _jsxFileName = \"/Users/mahiarahman/Documents/Harvard/classes/cs1060/hw6/redesigning_opportunity/client/src/components/OpportunityMap.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Box, Typography } from '@mui/material';\n\n// Replace with your Mapbox access token\n// For a real application, you would store this in an environment variable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFoaWFyIiwiYSI6ImNtNDY1YnlwdDB2Z2IybHEwd2w3MHJvb3cifQ.wJqnzFFTwLFwYhiPG3SWJA';\nconst OpportunityMap = ({\n  neighborhoods\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  const [mapError, setMapError] = useState(null);\n\n  // Debug: Log neighborhoods data\n  useEffect(() => {\n    console.log('OpportunityMap received neighborhoods data:', neighborhoods);\n    if (neighborhoods) {\n      var _neighborhoods$featur, _neighborhoods$featur2;\n      console.log('Number of features:', (_neighborhoods$featur = neighborhoods.features) === null || _neighborhoods$featur === void 0 ? void 0 : _neighborhoods$featur.length);\n      console.log('First feature:', (_neighborhoods$featur2 = neighborhoods.features) === null || _neighborhoods$featur2 === void 0 ? void 0 : _neighborhoods$featur2[0]);\n    }\n  }, [neighborhoods]);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    // Initialize map even if neighborhoods is null, we'll update it when data arrives\n    console.log('Initializing map, neighborhoods data available:', !!neighborhoods);\n\n    // Check if map is already initialized\n    if (mapRef.current) return;\n    try {\n      console.log('Creating map with container:', mapContainerRef.current);\n      const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/streets-v12',\n        // Try a different style\n        center: [-73.97, 40.75],\n        // NYC coordinates (example)\n        zoom: 10,\n        // Zoom out a bit more\n        attributionControl: true,\n        preserveDrawingBuffer: true // This can help with rendering issues\n      });\n      console.log('Map initialized successfully');\n      mapRef.current = map;\n\n      // Add error handling\n      map.on('error', e => {\n        var _e$error;\n        console.error('Mapbox error:', e);\n        setMapError(`${((_e$error = e.error) === null || _e$error === void 0 ? void 0 : _e$error.message) || 'Unknown error'}`);\n      });\n\n      // Add navigation control (zoom buttons)\n      map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n      map.on('load', () => {\n        console.log('Map loaded, neighborhoods data available:', !!neighborhoods);\n        if (!neighborhoods || !neighborhoods.features || neighborhoods.features.length === 0) {\n          console.log('No neighborhood data available yet, will update when data arrives');\n          return;\n        }\n        console.log('Adding neighborhood data to map');\n\n        // Add the neighborhoods data as a source\n        map.addSource('neighborhoods', {\n          type: 'geojson',\n          data: neighborhoods\n        });\n\n        // Add a layer for the neighborhood polygons\n        map.addLayer({\n          id: 'neighborhood-fills',\n          type: 'fill',\n          source: 'neighborhoods',\n          layout: {},\n          paint: {\n            'fill-color': ['case', ['has', 'filtered'],\n            // Check if the 'filtered' property exists\n            ['case', ['==', ['get', 'filtered'], true],\n            // If filtered is true\n            ['interpolate', ['linear'], ['get', 'opportunityScore'], 0, '#f7fbff', 2, '#d0e1f2', 4, '#94c4df', 6, '#4a98c9', 8, '#1764ab', 10, '#08306b'], '#cccccc' // If filtered is false, use gray\n            ],\n            // If 'filtered' property doesn't exist, use the regular color scale\n            ['interpolate', ['linear'], ['get', 'opportunityScore'], 0, '#f7fbff', 2, '#d0e1f2', 4, '#94c4df', 6, '#4a98c9', 8, '#1764ab', 10, '#08306b']],\n            'fill-opacity': 0.75\n          }\n        });\n\n        // Add a layer for the neighborhood borders\n        map.addLayer({\n          id: 'neighborhood-borders',\n          type: 'line',\n          source: 'neighborhoods',\n          layout: {},\n          paint: {\n            'line-color': '#000',\n            'line-width': 1\n          }\n        });\n\n        // Add a popup on hover\n        const popup = new mapboxgl.Popup({\n          closeButton: false,\n          closeOnClick: false\n        });\n        map.on('mouseenter', 'neighborhood-fills', e => {\n          map.getCanvas().style.cursor = 'pointer';\n          const properties = e.features[0].properties;\n          const filtered = properties.filtered !== undefined ? properties.filtered : true;\n          if (filtered) {\n            const coordinates = e.lngLat;\n            const html = `\n              <strong>${properties.name}</strong><br/>\n              Opportunity Score: ${properties.opportunityScore}<br/>\n              School Quality: ${properties.schoolQuality}<br/>\n              ${properties.description}\n            `;\n            popup.setLngLat(coordinates).setHTML(html).addTo(map);\n          }\n        });\n        map.on('mouseleave', 'neighborhood-fills', () => {\n          map.getCanvas().style.cursor = '';\n          popup.remove();\n        });\n      });\n\n      // Clean up on unmount\n      return () => map.remove();\n    } catch (error) {\n      console.error('Error initializing map:', error);\n      setMapError(`Failed to initialize map: ${error.message}`);\n    }\n  }, []); // Empty dependency array to ensure it only runs once\n\n  // Update the map when neighborhoods data changes\n  useEffect(() => {\n    if (!mapRef.current || !neighborhoods) return;\n    const map = mapRef.current;\n\n    // Wait for the style to be fully loaded\n    if (!map.isStyleLoaded()) {\n      console.log('Style not loaded yet, waiting for style.load event');\n      const onStyleLoad = () => {\n        updateMapData(map, neighborhoods);\n        map.off('style.load', onStyleLoad);\n      };\n      map.on('style.load', onStyleLoad);\n      return;\n    }\n    updateMapData(map, neighborhoods);\n  }, [neighborhoods]);\n\n  // Helper function to update map data\n  const updateMapData = (map, data) => {\n    console.log('Updating map with neighborhoods data');\n    try {\n      // Check if source already exists\n      if (map.getSource('neighborhoods')) {\n        console.log('Updating existing neighborhoods data source');\n        map.getSource('neighborhoods').setData(data);\n        return;\n      }\n\n      // If source doesn't exist, add it and the layers\n      console.log('Adding neighborhoods source and layers');\n\n      // Add the neighborhoods data as a source\n      map.addSource('neighborhoods', {\n        type: 'geojson',\n        data: data\n      });\n\n      // Add a layer for the neighborhood polygons\n      map.addLayer({\n        id: 'neighborhood-fills',\n        type: 'fill',\n        source: 'neighborhoods',\n        layout: {},\n        paint: {\n          'fill-color': ['case', ['has', 'filtered'],\n          // Check if the 'filtered' property exists\n          ['case', ['==', ['get', 'filtered'], true],\n          // If filtered is true\n          ['interpolate', ['linear'], ['get', 'opportunityScore'], 0, '#f7fbff', 2, '#d0e1f2', 4, '#94c4df', 6, '#4a98c9', 8, '#1764ab', 10, '#08306b'], '#cccccc' // If filtered is false, use gray\n          ],\n          // If 'filtered' property doesn't exist, use the regular color scale\n          ['interpolate', ['linear'], ['get', 'opportunityScore'], 0, '#f7fbff', 2, '#d0e1f2', 4, '#94c4df', 6, '#4a98c9', 8, '#1764ab', 10, '#08306b']],\n          'fill-opacity': 0.75\n        }\n      });\n\n      // Add a layer for the neighborhood borders\n      map.addLayer({\n        id: 'neighborhood-borders',\n        type: 'line',\n        source: 'neighborhoods',\n        layout: {},\n        paint: {\n          'line-color': '#000',\n          'line-width': 1\n        }\n      });\n\n      // Add a popup on hover\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      map.on('mouseenter', 'neighborhood-fills', e => {\n        map.getCanvas().style.cursor = 'pointer';\n        const properties = e.features[0].properties;\n        const filtered = properties.filtered !== undefined ? properties.filtered : true;\n        if (filtered) {\n          const coordinates = e.lngLat;\n          const html = `\n            <strong>${properties.name}</strong><br/>\n            Opportunity Score: ${properties.opportunityScore}<br/>\n            School Quality: ${properties.schoolQuality}<br/>\n            ${properties.description}\n          `;\n          popup.setLngLat(coordinates).setHTML(html).addTo(map);\n        }\n      });\n      map.on('mouseleave', 'neighborhood-fills', () => {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n      });\n    } catch (error) {\n      console.error('Error updating map data:', error);\n      setMapError(`Failed to update map data: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100%',\n      position: 'relative'\n    },\n    children: mapError ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        textAlign: 'center',\n        color: 'error.main'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Error loading map: \", mapError]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      ref: mapContainerRef,\n      className: \"map-container\",\n      sx: {\n        width: '100%',\n        height: '100%',\n        minHeight: '500px',\n        border: '1px solid #ddd'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(OpportunityMap, \"OMnUmKlm8bVCkh3am1rEI6oQrkE=\");\n_c = OpportunityMap;\nexport default OpportunityMap;\nvar _c;\n$RefreshReg$(_c, \"OpportunityMap\");","map":{"version":3,"names":["React","useRef","useEffect","useState","mapboxgl","Box","Typography","jsxDEV","_jsxDEV","accessToken","OpportunityMap","neighborhoods","_s","mapContainerRef","mapRef","mapError","setMapError","console","log","_neighborhoods$featur","_neighborhoods$featur2","features","length","current","map","Map","container","style","center","zoom","attributionControl","preserveDrawingBuffer","on","e","_e$error","error","message","addControl","NavigationControl","addSource","type","data","addLayer","id","source","layout","paint","popup","Popup","closeButton","closeOnClick","getCanvas","cursor","properties","filtered","undefined","coordinates","lngLat","html","name","opportunityScore","schoolQuality","description","setLngLat","setHTML","addTo","remove","isStyleLoaded","onStyleLoad","updateMapData","off","getSource","setData","sx","width","height","position","children","p","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","minHeight","border","_c","$RefreshReg$"],"sources":["/Users/mahiarahman/Documents/Harvard/classes/cs1060/hw6/redesigning_opportunity/client/src/components/OpportunityMap.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Box, Typography } from '@mui/material';\n\n// Replace with your Mapbox access token\n// For a real application, you would store this in an environment variable\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFoaWFyIiwiYSI6ImNtNDY1YnlwdDB2Z2IybHEwd2w3MHJvb3cifQ.wJqnzFFTwLFwYhiPG3SWJA';\n\nconst OpportunityMap = ({ neighborhoods }) => {\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  const [mapError, setMapError] = useState(null);\n  \n  // Debug: Log neighborhoods data\n  useEffect(() => {\n    console.log('OpportunityMap received neighborhoods data:', neighborhoods);\n    if (neighborhoods) {\n      console.log('Number of features:', neighborhoods.features?.length);\n      console.log('First feature:', neighborhoods.features?.[0]);\n    }\n  }, [neighborhoods]);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    // Initialize map even if neighborhoods is null, we'll update it when data arrives\n    console.log('Initializing map, neighborhoods data available:', !!neighborhoods);\n    \n    // Check if map is already initialized\n    if (mapRef.current) return;\n    \n    try {\n      console.log('Creating map with container:', mapContainerRef.current);\n      \n      const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/mapbox/streets-v12', // Try a different style\n        center: [-73.97, 40.75], // NYC coordinates (example)\n        zoom: 10, // Zoom out a bit more\n        attributionControl: true,\n        preserveDrawingBuffer: true // This can help with rendering issues\n      });\n      \n      console.log('Map initialized successfully');\n      mapRef.current = map;\n      \n      // Add error handling\n      map.on('error', (e) => {\n        console.error('Mapbox error:', e);\n        setMapError(`${e.error?.message || 'Unknown error'}`);\n      });\n      \n      // Add navigation control (zoom buttons)\n      map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n      \n      map.on('load', () => {\n        console.log('Map loaded, neighborhoods data available:', !!neighborhoods);\n        \n        if (!neighborhoods || !neighborhoods.features || neighborhoods.features.length === 0) {\n          console.log('No neighborhood data available yet, will update when data arrives');\n          return;\n        }\n        \n        console.log('Adding neighborhood data to map');\n        \n        // Add the neighborhoods data as a source\n        map.addSource('neighborhoods', {\n          type: 'geojson',\n          data: neighborhoods\n        });\n        \n        // Add a layer for the neighborhood polygons\n        map.addLayer({\n          id: 'neighborhood-fills',\n          type: 'fill',\n          source: 'neighborhoods',\n          layout: {},\n          paint: {\n            'fill-color': [\n              'case',\n              ['has', 'filtered'], // Check if the 'filtered' property exists\n              [\n                'case',\n                ['==', ['get', 'filtered'], true], // If filtered is true\n                [\n                  'interpolate',\n                  ['linear'],\n                  ['get', 'opportunityScore'],\n                  0, '#f7fbff',\n                  2, '#d0e1f2',\n                  4, '#94c4df',\n                  6, '#4a98c9',\n                  8, '#1764ab',\n                  10, '#08306b'\n                ],\n                '#cccccc' // If filtered is false, use gray\n              ],\n              // If 'filtered' property doesn't exist, use the regular color scale\n              [\n                'interpolate',\n                ['linear'],\n                ['get', 'opportunityScore'],\n                0, '#f7fbff',\n                2, '#d0e1f2',\n                4, '#94c4df',\n                6, '#4a98c9',\n                8, '#1764ab',\n                10, '#08306b'\n              ]\n            ],\n            'fill-opacity': 0.75\n          }\n        });\n        \n        // Add a layer for the neighborhood borders\n        map.addLayer({\n          id: 'neighborhood-borders',\n          type: 'line',\n          source: 'neighborhoods',\n          layout: {},\n          paint: {\n            'line-color': '#000',\n            'line-width': 1\n          }\n        });\n        \n        // Add a popup on hover\n        const popup = new mapboxgl.Popup({\n          closeButton: false,\n          closeOnClick: false\n        });\n        \n        map.on('mouseenter', 'neighborhood-fills', (e) => {\n          map.getCanvas().style.cursor = 'pointer';\n          \n          const properties = e.features[0].properties;\n          const filtered = properties.filtered !== undefined ? properties.filtered : true;\n          \n          if (filtered) {\n            const coordinates = e.lngLat;\n            \n            const html = `\n              <strong>${properties.name}</strong><br/>\n              Opportunity Score: ${properties.opportunityScore}<br/>\n              School Quality: ${properties.schoolQuality}<br/>\n              ${properties.description}\n            `;\n            \n            popup.setLngLat(coordinates).setHTML(html).addTo(map);\n          }\n        });\n        \n        map.on('mouseleave', 'neighborhood-fills', () => {\n          map.getCanvas().style.cursor = '';\n          popup.remove();\n        });\n      });\n      \n      // Clean up on unmount\n      return () => map.remove();\n    } catch (error) {\n      console.error('Error initializing map:', error);\n      setMapError(`Failed to initialize map: ${error.message}`);\n    }\n  }, []); // Empty dependency array to ensure it only runs once\n  \n  // Update the map when neighborhoods data changes\n  useEffect(() => {\n    if (!mapRef.current || !neighborhoods) return;\n    \n    const map = mapRef.current;\n    \n    // Wait for the style to be fully loaded\n    if (!map.isStyleLoaded()) {\n      console.log('Style not loaded yet, waiting for style.load event');\n      const onStyleLoad = () => {\n        updateMapData(map, neighborhoods);\n        map.off('style.load', onStyleLoad);\n      };\n      map.on('style.load', onStyleLoad);\n      return;\n    }\n    \n    updateMapData(map, neighborhoods);\n  }, [neighborhoods]);\n  \n  // Helper function to update map data\n  const updateMapData = (map, data) => {\n    console.log('Updating map with neighborhoods data');\n    \n    try {\n      // Check if source already exists\n      if (map.getSource('neighborhoods')) {\n        console.log('Updating existing neighborhoods data source');\n        map.getSource('neighborhoods').setData(data);\n        return;\n      }\n      \n      // If source doesn't exist, add it and the layers\n      console.log('Adding neighborhoods source and layers');\n      \n      // Add the neighborhoods data as a source\n      map.addSource('neighborhoods', {\n        type: 'geojson',\n        data: data\n      });\n      \n      // Add a layer for the neighborhood polygons\n      map.addLayer({\n        id: 'neighborhood-fills',\n        type: 'fill',\n        source: 'neighborhoods',\n        layout: {},\n        paint: {\n          'fill-color': [\n            'case',\n            ['has', 'filtered'], // Check if the 'filtered' property exists\n            [\n              'case',\n              ['==', ['get', 'filtered'], true], // If filtered is true\n              [\n                'interpolate',\n                ['linear'],\n                ['get', 'opportunityScore'],\n                0, '#f7fbff',\n                2, '#d0e1f2',\n                4, '#94c4df',\n                6, '#4a98c9',\n                8, '#1764ab',\n                10, '#08306b'\n              ],\n              '#cccccc' // If filtered is false, use gray\n            ],\n            // If 'filtered' property doesn't exist, use the regular color scale\n            [\n              'interpolate',\n              ['linear'],\n              ['get', 'opportunityScore'],\n              0, '#f7fbff',\n              2, '#d0e1f2',\n              4, '#94c4df',\n              6, '#4a98c9',\n              8, '#1764ab',\n              10, '#08306b'\n            ]\n          ],\n          'fill-opacity': 0.75\n        }\n      });\n      \n      // Add a layer for the neighborhood borders\n      map.addLayer({\n        id: 'neighborhood-borders',\n        type: 'line',\n        source: 'neighborhoods',\n        layout: {},\n        paint: {\n          'line-color': '#000',\n          'line-width': 1\n        }\n      });\n      \n      // Add a popup on hover\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      \n      map.on('mouseenter', 'neighborhood-fills', (e) => {\n        map.getCanvas().style.cursor = 'pointer';\n        \n        const properties = e.features[0].properties;\n        const filtered = properties.filtered !== undefined ? properties.filtered : true;\n        \n        if (filtered) {\n          const coordinates = e.lngLat;\n          \n          const html = `\n            <strong>${properties.name}</strong><br/>\n            Opportunity Score: ${properties.opportunityScore}<br/>\n            School Quality: ${properties.schoolQuality}<br/>\n            ${properties.description}\n          `;\n          \n          popup.setLngLat(coordinates).setHTML(html).addTo(map);\n        }\n      });\n      \n      map.on('mouseleave', 'neighborhood-fills', () => {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n      });\n    } catch (error) {\n      console.error('Error updating map data:', error);\n      setMapError(`Failed to update map data: ${error.message}`);\n    }\n  };\n  \n  return (\n    <Box sx={{ width: '100%', height: '100%', position: 'relative' }}>\n      {mapError ? (\n        <Box sx={{ p: 3, textAlign: 'center', color: 'error.main' }}>\n          <Typography>Error loading map: {mapError}</Typography>\n        </Box>\n      ) : (\n        <Box \n          ref={mapContainerRef} \n          className=\"map-container\"\n          sx={{ \n            width: '100%', \n            height: '100%',\n            minHeight: '500px',\n            border: '1px solid #ddd'\n          }} \n        />\n      )}\n    </Box>\n  );\n};\n\nexport default OpportunityMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}