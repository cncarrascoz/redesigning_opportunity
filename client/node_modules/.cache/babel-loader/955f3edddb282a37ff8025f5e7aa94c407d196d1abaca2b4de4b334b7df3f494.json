{"ast":null,"code":"var _jsxFileName = \"/Users/mahiarahman/Documents/Harvard/classes/cs1060/hw6/redesigning_opportunity/client/src/components/OpportunityMap.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Box } from '@mui/material';\n\n// Replace with your Mapbox access token\n// For a real application, you would store this in an environment variable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\nconst OpportunityMap = ({\n  neighborhoods\n}) => {\n  _s();\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    if (!neighborhoods) return;\n    console.log('Initializing map with neighborhoods data');\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/light-v11',\n      center: [-73.97, 40.75],\n      // NYC coordinates (example)\n      zoom: 12\n    });\n    mapRef.current = map;\n\n    // Add navigation control (zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n    map.on('load', () => {\n      console.log('Map loaded, adding neighborhood data');\n\n      // Add the neighborhoods data as a source\n      map.addSource('neighborhoods', {\n        type: 'geojson',\n        data: neighborhoods\n      });\n\n      // Add a layer for the neighborhood polygons\n      map.addLayer({\n        id: 'neighborhood-fills',\n        type: 'fill',\n        source: 'neighborhoods',\n        layout: {},\n        paint: {\n          'fill-color': ['case', ['has', 'filtered'],\n          // Check if the 'filtered' property exists\n          ['case', ['==', ['get', 'filtered'], true],\n          // If filtered is true\n          ['interpolate', ['linear'], ['get', 'opportunityScore'], 0, '#f7fbff', 2, '#d0e1f2', 4, '#94c4df', 6, '#4a98c9', 8, '#1764ab', 10, '#08306b'], '#cccccc' // If filtered is false, use gray\n          ],\n          // If 'filtered' property doesn't exist, use the regular color scale\n          ['interpolate', ['linear'], ['get', 'opportunityScore'], 0, '#f7fbff', 2, '#d0e1f2', 4, '#94c4df', 6, '#4a98c9', 8, '#1764ab', 10, '#08306b']],\n          'fill-opacity': 0.75\n        }\n      });\n\n      // Add a layer for the neighborhood borders\n      map.addLayer({\n        id: 'neighborhood-borders',\n        type: 'line',\n        source: 'neighborhoods',\n        layout: {},\n        paint: {\n          'line-color': '#000',\n          'line-width': 1\n        }\n      });\n\n      // Add a popup on hover\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      map.on('mouseenter', 'neighborhood-fills', e => {\n        map.getCanvas().style.cursor = 'pointer';\n        const properties = e.features[0].properties;\n        const filtered = properties.filtered !== undefined ? properties.filtered : true;\n        if (filtered) {\n          const coordinates = e.lngLat;\n          const html = `\n            <strong>${properties.name}</strong><br/>\n            Opportunity Score: ${properties.opportunityScore}<br/>\n            School Quality: ${properties.schoolQuality}<br/>\n            ${properties.description}\n          `;\n          popup.setLngLat(coordinates).setHTML(html).addTo(map);\n        }\n      });\n      map.on('mouseleave', 'neighborhood-fills', () => {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n      });\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, [neighborhoods]);\n\n  // Update the map when neighborhoods data changes\n  useEffect(() => {\n    if (!mapRef.current || !neighborhoods) return;\n    const map = mapRef.current;\n    if (map.getSource('neighborhoods')) {\n      console.log('Updating neighborhoods data source');\n      map.getSource('neighborhoods').setData(neighborhoods);\n    }\n  }, [neighborhoods]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: mapContainerRef,\n    sx: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n};\n_s(OpportunityMap, \"y+879qdgJgnzkBZN4JcpE3pS/P8=\");\n_c = OpportunityMap;\nexport default OpportunityMap;\nvar _c;\n$RefreshReg$(_c, \"OpportunityMap\");","map":{"version":3,"names":["React","useRef","useEffect","mapboxgl","Box","jsxDEV","_jsxDEV","accessToken","OpportunityMap","neighborhoods","_s","mapContainerRef","mapRef","console","log","map","Map","container","current","style","center","zoom","addControl","NavigationControl","on","addSource","type","data","addLayer","id","source","layout","paint","popup","Popup","closeButton","closeOnClick","e","getCanvas","cursor","properties","features","filtered","undefined","coordinates","lngLat","html","name","opportunityScore","schoolQuality","description","setLngLat","setHTML","addTo","remove","getSource","setData","ref","sx","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mahiarahman/Documents/Harvard/classes/cs1060/hw6/redesigning_opportunity/client/src/components/OpportunityMap.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport { Box } from '@mui/material';\n\n// Replace with your Mapbox access token\n// For a real application, you would store this in an environment variable\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\nconst OpportunityMap = ({ neighborhoods }) => {\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    if (!neighborhoods) return;\n\n    console.log('Initializing map with neighborhoods data');\n    \n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/light-v11',\n      center: [-73.97, 40.75], // NYC coordinates (example)\n      zoom: 12\n    });\n    \n    mapRef.current = map;\n    \n    // Add navigation control (zoom buttons)\n    map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n    \n    map.on('load', () => {\n      console.log('Map loaded, adding neighborhood data');\n      \n      // Add the neighborhoods data as a source\n      map.addSource('neighborhoods', {\n        type: 'geojson',\n        data: neighborhoods\n      });\n      \n      // Add a layer for the neighborhood polygons\n      map.addLayer({\n        id: 'neighborhood-fills',\n        type: 'fill',\n        source: 'neighborhoods',\n        layout: {},\n        paint: {\n          'fill-color': [\n            'case',\n            ['has', 'filtered'], // Check if the 'filtered' property exists\n            [\n              'case',\n              ['==', ['get', 'filtered'], true], // If filtered is true\n              [\n                'interpolate',\n                ['linear'],\n                ['get', 'opportunityScore'],\n                0, '#f7fbff',\n                2, '#d0e1f2',\n                4, '#94c4df',\n                6, '#4a98c9',\n                8, '#1764ab',\n                10, '#08306b'\n              ],\n              '#cccccc' // If filtered is false, use gray\n            ],\n            // If 'filtered' property doesn't exist, use the regular color scale\n            [\n              'interpolate',\n              ['linear'],\n              ['get', 'opportunityScore'],\n              0, '#f7fbff',\n              2, '#d0e1f2',\n              4, '#94c4df',\n              6, '#4a98c9',\n              8, '#1764ab',\n              10, '#08306b'\n            ]\n          ],\n          'fill-opacity': 0.75\n        }\n      });\n      \n      // Add a layer for the neighborhood borders\n      map.addLayer({\n        id: 'neighborhood-borders',\n        type: 'line',\n        source: 'neighborhoods',\n        layout: {},\n        paint: {\n          'line-color': '#000',\n          'line-width': 1\n        }\n      });\n      \n      // Add a popup on hover\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      \n      map.on('mouseenter', 'neighborhood-fills', (e) => {\n        map.getCanvas().style.cursor = 'pointer';\n        \n        const properties = e.features[0].properties;\n        const filtered = properties.filtered !== undefined ? properties.filtered : true;\n        \n        if (filtered) {\n          const coordinates = e.lngLat;\n          \n          const html = `\n            <strong>${properties.name}</strong><br/>\n            Opportunity Score: ${properties.opportunityScore}<br/>\n            School Quality: ${properties.schoolQuality}<br/>\n            ${properties.description}\n          `;\n          \n          popup.setLngLat(coordinates).setHTML(html).addTo(map);\n        }\n      });\n      \n      map.on('mouseleave', 'neighborhood-fills', () => {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n      });\n    });\n    \n    // Clean up on unmount\n    return () => map.remove();\n  }, [neighborhoods]);\n  \n  // Update the map when neighborhoods data changes\n  useEffect(() => {\n    if (!mapRef.current || !neighborhoods) return;\n    \n    const map = mapRef.current;\n    \n    if (map.getSource('neighborhoods')) {\n      console.log('Updating neighborhoods data source');\n      map.getSource('neighborhoods').setData(neighborhoods);\n    }\n  }, [neighborhoods]);\n  \n  return <Box ref={mapContainerRef} sx={{ width: '100%', height: '100%' }} />;\n};\n\nexport default OpportunityMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}