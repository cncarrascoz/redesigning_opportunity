{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/ericvasquez/Downloads/Local/Classes/Y4/Spring/CS1060/evasquez25-hw6/src/app/api/save-family-data/route.ts"],"sourcesContent":["// app/api/save-family-data/route.ts\nimport { NextResponse } from 'next/server';\n\nexport async function POST(request: Request) {\n  try {\n    const familyData = await request.json();\n    \n    // Here you would implement database storage logic\n    // For example with Prisma, Firebase, MongoDB, etc.\n    \n    // For now, we'll simply log the data (in a real app, store it in a database)\n    console.log('Received family data:', familyData);\n    \n    // Simulate processing time\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    // Return success response\n    return NextResponse.json({ \n      success: true, \n      message: 'Family data saved successfully' \n    });\n  } catch (error) {\n    console.error('Error saving family data:', error);\n    \n    return NextResponse.json(\n      { success: false, message: 'Failed to save family data' },\n      { status: 500 }\n    );\n  }\n}"],"names":[],"mappings":"AAAA,oCAAoC;;;;AACpC;;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,aAAa,MAAM,QAAQ,IAAI;QAErC,kDAAkD;QAClD,mDAAmD;QAEnD,6EAA6E;QAC7E,QAAQ,GAAG,CAAC,yBAAyB;QAErC,2BAA2B;QAC3B,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QAEjD,0BAA0B;QAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS;QACX;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAE3C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,SAAS;QAA6B,GACxD;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}